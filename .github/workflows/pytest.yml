name: PyTest
on:
  pull_request:
    types: [opened]
  push:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        database: ["mariadb"]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install dependencies
        run: poetry install --no-interaction

      - uses: getong/mariadb-action@v1.1
        with:
          mariadb version: '10.6.4'
          mysql database: 'yepcord_test'
          mysql root password: 'yepcord_test'

      - name: Wait for MariaDB
        run: |
          while ! mysqladmin ping --host=127.0.0.1 --password=yepcord_test --silent; do
            sleep 1
          done

      - name: Setup database
        run: |
          poetry run quart generate-schemas
        env:
          QUART_APP: app:create_yepcord
          SETTINGS: src.settings_test
          DB_TYPE: ${{ matrix.database }}

      - name: Run test suite for core
        run: |
          poetry run pytest -x --cov-report=xml --cov-append --cov=src/yepcord --disable-warnings tests/test_core.py
        env:
          DB_TYPE: ${{ matrix.database }}
          KEY: ${{ secrets.KEY }}
          SETTINGS: src.settings_test

      - name: Run test suite for http api
        run: |
          poetry run pytest -x --cov-report=xml --cov-append --cov=src/rest_api --cov=src/yepcord --cov=src/remote_auth --disable-warnings tests/api/
        env:
          DB_TYPE: ${{ matrix.database }}
          KEY: ${{ secrets.KEY }}
          TENOR_KEY: ${{ secrets.TENOR_KEY }}
          SETTINGS: src.settings_test

      - name: Run test suite for cdn/storage
        run: |
          mkdir -p tests/files/yepcord-test
          poetry run pytest -x --cov-report=xml --cov-append --cov=src/cdn --cov=src/yepcord --cov-config=.coveragerc --disable-warnings tests/cdn/
        env:
          DB_TYPE: ${{ matrix.database }}
          KEY: ${{ secrets.KEY }}
          SETTINGS: src.settings_test

      - name: Print coverage report
        run: |
          poetry run coverage report

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}